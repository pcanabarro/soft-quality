# tests/test_criar_ticket.py
import os
from dotenv import load_dotenv
import pytest
from playwright.sync_api import Page, sync_playwright

# Importa as classes Page Object
from pages.login_page import LoginPage
from pages.portal_home_page import PortalHomePage
from pages.criar_ticket_page import CriarTicketPage

# Carrega as vari√°veis de ambiente do arquivo .env
load_dotenv()

# Fixture para configurar o navegador para cada teste
@pytest.fixture(scope="function")
def setup_browser():
    with sync_playwright() as p:
        # Configura√ß√µes do navegador:
        # headless=False: O navegador ser√° vis√≠vel durante a execu√ß√£o (√∫til para depura√ß√£o).
        # slow_mo=500: Adiciona um atraso de 500ms entre as a√ß√µes do Playwright para facilitar a visualiza√ß√£o.
        browser = p.chromium.launch(headless=False, slow_mo=500)
        page = browser.new_page()
        yield page # Cede o controle da 'page' para a fun√ß√£o de teste
        browser.close() # Garante que o navegador seja fechado ap√≥s o teste

# Teste para criar um novo ticket no sistema
def test_criar_novo_ticket(setup_browser: Page):
    page = setup_browser

    # --- 1. Obter credenciais e URLs das vari√°veis de ambiente ---
    # √â fundamental que essas vari√°veis estejam definidas no seu arquivo .env
    usuario = os.getenv("LOGIN_USERNAME")
    senha = os.getenv("LOGIN_PASSWORD")
    login_url = os.getenv("LOGIN_URL")
    home_url = os.getenv("HOME_URL")
    create_ticket_url = os.getenv("CREATE_TICKET_URL")

    # Valida se as vari√°veis de ambiente foram carregadas corretamente
    assert usuario, "Erro: Vari√°vel de ambiente LOGIN_USERNAME n√£o definida! Verifique seu .env"
    assert senha, "Erro: Vari√°vel de ambiente LOGIN_PASSWORD n√£o definida! Verifique seu .env"
    assert login_url, "Erro: Vari√°vel de ambiente LOGIN_URL n√£o definida! Verifique seu .env"
    assert home_url, "Erro: Vari√°vel de ambiente HOME_URL n√£o definida! Verifique seu .env"
    assert create_ticket_url, "Erro: Vari√°vel de ambiente CREATE_TICKET_URL n√£o definida! Verifique seu .env"

    # --- 2. Instanciar as Page Objects ---
    # Cada Page Object recebe a inst√¢ncia 'page' do Playwright e as URLs relevantes.
    login_page = LoginPage(page, login_url)
    portal_home_page = PortalHomePage(page, home_url)
    criar_ticket_page = CriarTicketPage(page, create_ticket_url)

    print("\n--- Iniciando teste de Cria√ß√£o de Ticket ---")

    # --- 3. Pr√©-condi√ß√£o: Realizar o login ---
    # Reutiliza a l√≥gica de login da LoginPage para garantir que o usu√°rio esteja autenticado.
    print("Passo 1: Realizando login no sistema...")
    login_page.navegar()
    login_page.fazer_login(usuario, senha)
    # Valida que o login foi bem-sucedido e redirecionou para a p√°gina inicial esperada.
    assert portal_home_page.esta_na_pagina_inicial(), \
        "Falha na pr√©-condi√ß√£o: Login n√£o foi bem-sucedido ou n√£o redirecionou para a home page."

    # --- 4. Navegar para a p√°gina de Abrir Tickets ---
    # Embora haja um link, para o teste ser mais direto e isolado, navegamos direto para a URL.
    print("Passo 2: Navegando para o formul√°rio de cria√ß√£o de ticket...")
    criar_ticket_page.navegar_para_formulario()

    # --- 5. Preencher os detalhes do ticket ---
    print("Passo 3: Preenchendo os campos do ticket...")
    # Sele√ß√£o de Cliente: 'BRAIN'
    criar_ticket_page.selecionar_cliente("BRAIN")

    # Sele√ß√£o de Projeto: 'BACKOFFICE'
    criar_ticket_page.selecionar_projeto("BACKOFFICE")

    # Selecionar Solicita√ß√£o: "Outros" (value="34")
    criar_ticket_page.selecionar_solicitacao("34")

    # Preencher Descri√ß√£o
    # A descri√ß√£o pode incluir um timestamp ou algo √∫nico para identificar o ticket gerado em testes reais.
    # Ex: f"THIS IS AN AUTOMATED TEST USING PLAYWRIGHT - {datetime.now().strftime('%Y%m%d%H%M%S')}"
    # Para este exemplo, manteremos a string fixa.
    ticket_description = "THIS IS A AUTOMATED TEST USING PLAYWRIGHT"
    criar_ticket_page.preencher_descricao(ticket_description)

    # Preencher Produto SAP
    criar_ticket_page.preencher_produto_sap("S4 HANA")

    # Selecionar Role SAP: "4. Outro" (value="186")
    criar_ticket_page.selecionar_role_sap("186")

    # --- 6. Clicar em Abrir Ticket ---
    print("Passo 4: Clicando em 'Abrir Ticket' para finalizar...")
    criar_ticket_page.clicar_abrir_ticket()

    # --- 7. Valida√ß√£o P√≥s-Cria√ß√£o ---
    # Aqui, esperamos que ap√≥s a cria√ß√£o, a p√°gina redirecione para a HOME_URL
    # (que √© a p√°gina de listagem de ocorr√™ncias).
    print("Passo 5: Validando a cria√ß√£o do ticket (esperando redirecionamento para a lista de ocorr√™ncias)...")
    try:
        portal_home_page.page.wait_for_url(home_url, timeout=20000) # Aumentado para 20s para garantir
        print("Redirecionamento para a p√°gina de listagem de ocorr√™ncias foi bem-sucedido.")

        # Opcional: Adicione uma valida√ß√£o extra para verificar se o ticket realmente aparece na lista.
        # Isso seria mais robusto. Por exemplo, procurar o texto da descri√ß√£o do ticket.
        # try:
        #     expect(page.locator(f"p.help-block:has-text('{ticket_description}')")).to_be_visible(timeout=10000)
        #     print(f"Ticket com descri√ß√£o '{ticket_description}' encontrado na lista!")
        # except Exception:
        #     print(f"ATEN√á√ÉO: Ticket com descri√ß√£o '{ticket_description}' N√ÉO encontrado na lista, mas a URL est√° correta.")

        print("Teste de Cria√ß√£o de Ticket conclu√≠do e bem-sucedido! üéâ")

    except Exception as e:
        print(f"Teste de Cria√ß√£o de Ticket FALHOU! ‚ùå N√£o foi poss√≠vel validar a cria√ß√£o ou o redirecionamento. Erro: {e}")
        print(f"URL atual ap√≥s clique em Abrir Ticket: {page.url}")
        # Captura de tela para ajudar na depura√ß√£o em caso de falha
        screenshot_path = "criar_ticket_falhou.png"
        page.screenshot(path=screenshot_path)
        print(f"Screenshot '{screenshot_path}' salvo para depura√ß√£o.")
        raise # Re-levanta a exce√ß√£o para que pytest marque o teste como falho

    print("--- Fim do teste de Cria√ß√£o de Ticket ---")